@model Dashboards_Web.Models.SFBDataModel
@{
    ViewBag.Title = "Skype Library";
}

<html lang="en">
<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">

    <style>
        .row {
            padding: 0%;
            margin: 0%;
        }

        .col {
            padding: 0%;
            margin: 0%;
        }

        .searchContainer {
            padding: .5%;
        }

        .colPaddingLeftAndRight {
            padding-left: 0%;
            padding-right: 0%;
        }

        .colPaddingLeftAndRightWithRightMargin {
            padding-left: 0%;
            padding-right: 0%;
            margin-right: 2.7%
        }

        .rowImageContainer {
            margin-top: .5%;
        }

        .imageConatinerCols {
            padding: .25%;
        }

        .imageContainer {
            padding: 0%;
        }

        .titleText {
            font-size: 12px;
            font-weight: bold;
            padding: 4px;
            background-color: whitesmoke;
            color: #337ab7;
            overflow-wrap: break-word;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 1; /* number of lines to show */
            -webkit-box-orient: vertical;
        }

            .titleText:hover {
                font-size: 14px;
                -webkit-line-clamp: 10; /* number of lines to show */
                -webkit-box-orient: vertical;
            }

        .descText {
            font-size: 12px;
            padding: 3px;
            background-color: goldenrod;
            overflow-wrap: break-word;
            color: black;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 1; /* number of lines to show */
            -webkit-box-orient: vertical;
        }

            .descText:hover {
                background-color: darkgoldenrod;
                -webkit-line-clamp: 10; /* number of lines to show */
            }

        .titleDesc {
            margin: 0px;
        }

        .navText {
            font-size: 28px;
        }

        .commontoolsopheading {
            background-color: black;
            padding: 2px;
            margin: 5px;
            text-align: center;
            color: white;
            font-size: 16px;
            border: 3px solid darkgrey;
            border-radius: 50%;
        }

        .sopheading {
            margin-top: 10px;
        }

        .dropdown-menu > .active > a, .dropdown-menu > .active > a:focus, .dropdown-menu > .active > a:hover {
            background-color: #607d8b;
            font-weight: bold;
            border-color: #607d8b;
        }

        .btn-primary, .btn-primary:hover, open > .dropdown-toggle.btn-primary:hover {
            background-color: #607d8b;
            font-weight: bold;
        }

        input[type=checkbox] {
            width: 20px;
            height: 20px;
            margin-top: 10px;
        }
    </style>
    <script>
        $(document).ready(function () {
            $("#btnModal").click(function () {
                ChangeDropDown();
                $("#myModal").modal('show');

            });

            //$('input[type="checkbox"]').change(function () {
            //    if ($("#IsFrequentlyUsed").is(":checked") == true) {
            //        $("#freqUsed").show();
            //    }
            //    else {
            //        $("#freqUsed").hide();
            //    }
            //});

            $("#sbmt").click(function () {
                var category = $("#selDropdownCategory :selected").val();
                var track = $("#Track :selected").val();
                var type = $("#dropdownType :selected").val();

            //if ($("#IsFrequentlyUsed").is(":checked") == true) {
                var freqUsed = $("#dropdownFreqUsed :selected").val();
                //}
                $("#lblError").text("");
                if ($("#FriendlyName").val() == "" || $("#FriendlyName").val() == null) {
                    $("#lblError").text("Enter friendly name");
                    return;
                }
                if ($("#Description").val() == "" || $("#Description").val() == null) {
                    $("#lblError").text("Enter description");
                    return;
                }
                if ($("#Link").val() == "" || $("#Link").val() == null) {
                    $("#lblError").text("Enter link url");
                    return;
                }
                var modelData = { FriendlyName: $("#FriendlyName").val(), Description: $("#Description").val(), Link: $("#Link").val(), Category: category, Track: track, FrequentlyUsed: freqUsed, LinkType: type };
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@(Url.Action("SFBLibraryPost", "SkypeLibrary"))',
                data: JSON.stringify(modelData),
                success: function (message) {
                    $("#FriendlyName").text('');
                    $("#Description").text('');
                    $("#Link").text('');

                    $("#lblSuccess").text(message);
                },
                error: function () {

                }
            });
        });
        });

        function ChangeDropDown() {

            var categoryId = $("#selDropdownCategory :selected").val();
            $.ajax({
                url: '/SkypeLibrary/GetTrackByCategory',
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: { categoryId: categoryId },
                success: function (data) {
                    $("#Track").html('');
                    $.each(data, function (i, data) {
                        $('<option>',
                            {
                                value: data.Id,
                                text: data.Name
                            }).html(data.Name).appendTo("#Track");
                    });
                    $("#trackDiv").show();
                },
                error: function (xhr, status) {
                }
            });
        }
    </script>
</head>
<body>
    @*<nav class="navbar navbar-inverse">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand navText" href="#">SFB Library</a>
                </div>
            </div>
        </nav>*@

    <div class="container searchContainer">
        <div class="row">
            <div class="col-xs-2 colPaddingLeftAndRightWithRightMargin">
                <select id="sortdropdown" class="selectpicker" onchange="sortLinks();" data-style="btn-primary">
                    <option value="select">Sort By</option>
                    <option value="Ascending">Ascending</option>
                    <option value="Descending">Descending</option>
                </select>

            </div>
            <div class="col-xs-2 colPaddingLeftAndRightWithRightMargin" id="divcolAllFreq">
                <select id="dropdownAllFreq" class="selectpicker" onchange="getJsonData();" data-style="btn-primary">

                    <option selected="selected" value="SD Frequently Used">SD Frequently Used</option>
                    <option value="SOC Frequently Used">SOC Frequently Used</option>
                    <option value="CVM Frequently Used">CVM Frequently Used</option>
                    <option value="All">All</option>
                </select>
            </div>
            <div class="col-xs-2 colPaddingLeftAndRightWithRightMargin" id="divcolcategory">
                <select id="dropdownCategory" class="selectpicker" onchange="getTracks();" data-style="btn-primary">
                    <option value="select">Select Category</option>
                    <option value="Access">Access</option>
                    <option value="Generic">Generic</option>
                    <option value="Training">Training</option>
                    <option value="Operations">Operations</option>
                    <option value="Dashboard">Dashboard</option>
                </select>
            </div>
            <div class="col-xs-2 colPaddingLeftAndRightWithRightMargin" id="divcoltrack">
                <select id="dropdownTrack" class="selectpicker" onchange="getJsonData();" data-style="btn-primary">
                    <option value="select">Select Track</option>
                </select>
            </div>

            <div class="col-xs-2 colPaddingLeftAndRight">
                <div class="serachDiv">
                    <input type="text" style="width:140%" id="searchField" onkeyup="searchLinks()" class="form-control serachInputFiled" placeholder="Search by name.." title="Type in a name">
                </div>
            </div>

        </div>
        <br />
        <div class="row">
            <label style="color:#607d8b;font-size:18px;font-weight:bold">If you want to add new link to library : </label>
            <button type="button" class="btn btn-warning" data-target="#myModal" id="btnModal" style="background-color:#607d8b;color:white;">
                <span class="glyphicon glyphicon-plus-sign"></span> Add Link
            </button>
        </div>
    </div>
    <div class="container imageContainer" id="linksContainer">
    </div>
    <!-- Modal -->
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add SFB Links</h4>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Link, new { @class = "form-control", @placeholder = "Link*", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Link)
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.FriendlyName, new { @class = "form-control", @placeholder = "Friendly Name*", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.FriendlyName)
                        </div>
                        <div class="form-group">
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @placeholder = "Description*", @autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Description)
                        </div>
                        <div class="form-group">
                            Select Category
                            <div>
                                @Html.DropDownList("selDropdownCategory", (IEnumerable<SelectListItem>)ViewBag.CategoryList, new { @class = "form-control", @onchange = "ChangeDropDown()" })
                            </div>
                        </div>
                        <div class="form-group" id="trackDiv" style="display:none;">
                            Select Track
                            <div>
                                @Html.DropDownListFor(model => model.Track, Enumerable.Empty<SelectListItem>(), new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="form-group">
                            <div id="linkType">
                                Select Link Type
                                @Html.DropDownList("dropdownType", (IEnumerable<SelectListItem>)ViewBag.LinkType, new { @class = "form-control" })
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <div id="freqUsed">
                                Select frequently used
                                @Html.DropDownList("dropdownFreqUsed", (IEnumerable<SelectListItem>)ViewBag.FreqUsedType, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div id="freqUsed">
                                Select Images
                                @Html.DropDownList("dropdownImg", (IEnumerable<SelectListItem>)ViewBag.Images, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <input type="button" value="Submit" id="sbmt" class="btn btn-success" style="background-color:#607d8b" />
                        </div>

                        <label id="lblError" class="alert-danger"></label>
                        <label id="lblSuccess" class="alert-success"></label>
                    </form>
                </div>

            </div>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="~/Scripts/operations.js"></script>
</body>

</html>

